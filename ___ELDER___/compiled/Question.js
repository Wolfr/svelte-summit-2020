'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}

/* src/components/Question.svelte generated by Svelte v3.26.0 */

const css = {
	code: "p.svelte-1rfnfjp{color:var(--sky-blue);font-size:16px;--small-font-size:var(--media-lte-sm) 14px}.container.svelte-1rfnfjp{min-width:0}",
	map: "{\"version\":3,\"file\":\"Question.svelte\",\"sources\":[\"Question.svelte\"],\"sourcesContent\":[\"<script>\\nexport let title;\\n</script>\\n\\n<style>\\np {\\n  color: var(--sky-blue);\\n  font-size: 16px;\\n  --small-font-size: var(--media-lte-sm) 14px;\\n}\\n.container {\\n  min-width: 0;\\n}</style>\\n\\n<div class=\\\"container\\\">\\n  <h3>{title}</h3>\\n  <p>\\n    <slot />\\n  </p>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAKA,CAAC,eAAC,CAAC,AACD,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,SAAS,CAAE,IAAI,CACf,iBAAiB,CAAE,wBAAwB,AAC7C,CAAC,AACD,UAAU,eAAC,CAAC,AACV,SAAS,CAAE,CAAC,AACd,CAAC\"}"
};

const Question = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { title } = $$props;
	if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
	$$result.css.add(css);

	return `<div class="${"container svelte-1rfnfjp"}"><h3>${escape(title)}</h3>
  <p class="${"svelte-1rfnfjp"}">${slots.default ? slots.default({}) : ``}</p></div>`;
});

module.exports = Question;
