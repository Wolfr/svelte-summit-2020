'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}

/* src/routes/talks/Talks.svelte generated by Svelte v3.26.0 */

const css = {
	code: "a.svelte-f5rkh3{text-decoration:none}h1.svelte-f5rkh3{margin-bottom:10px}.content.svelte-f5rkh3{margin-top:1rem;margin-bottom:1rem;padding-bottom:1rem;border-bottom:1px solid #ddd}h2{margin-top:2rem}pre{background:#eee;padding:1rem;border-radius:1rem}blockquote{margin:0;background:#ddd;padding:3px 1.5rem 3px 3rem;position:relative;border-radius:1rem}blockquote:after{content:\">\";color:#aaa;font-size:30px;position:absolute;top:33%;left:1rem}blockquote p{padding:0}",
	map: "{\"version\":3,\"file\":\"Talks.svelte\",\"sources\":[\"Talks.svelte\"],\"sourcesContent\":[\"<script>\\nexport let data; // data is mainly being populated from the /plugins/edlerjs-plugin-markdown/index.js\\nconst { html, frontmatter } = data;\\n</script>\\n\\n<style>\\na {\\n  text-decoration: none;\\n}\\nh1 {\\n  margin-bottom: 10px;\\n}\\n\\n.content {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n  padding-bottom: 1rem;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n:global(h2) {\\n  margin-top: 2rem;\\n}\\n\\n:global(pre) {\\n  background: #eee;\\n  padding: 1rem;\\n  border-radius: 1rem;\\n}\\n\\n:global(blockquote) {\\n  margin: 0;\\n  background: #ddd;\\n  padding: 3px 1.5rem 3px 3rem;\\n  position: relative;\\n  border-radius: 1rem;\\n}\\n:global(blockquote:after) {\\n  content: \\\">\\\";\\n  color: #aaa;\\n  font-size: 30px;\\n  position: absolute;\\n  top: 33%;\\n  left: 1rem;\\n}\\n\\n:global(blockquote p) {\\n  padding: 0;\\n}</style>\\n\\n<svelte:head>\\n  <title>{frontmatter.title}</title>\\n</svelte:head>\\n<a href=\\\"/\\\">&LeftArrow; Home</a>\\n\\n{#if html}\\n  {@html html}\\n{:else}\\n  <h1>Oops!! Markdown not found!</h1>\\n{/if}\\n\\n<div class=\\\"container\\\" id=\\\"intro\\\">\\n  <div class=\\\"content\\\">\\n    {@html html}\\n  </div>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAMA,CAAC,cAAC,CAAC,AACD,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,IAAI,CACpB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AAEO,EAAE,AAAE,CAAC,AACX,UAAU,CAAE,IAAI,AAClB,CAAC,AAEO,GAAG,AAAE,CAAC,AACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACrB,CAAC,AAEO,UAAU,AAAE,CAAC,AACnB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAC5B,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,IAAI,AACrB,CAAC,AACO,gBAAgB,AAAE,CAAC,AACzB,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,IAAI,AACZ,CAAC,AAEO,YAAY,AAAE,CAAC,AACrB,OAAO,CAAE,CAAC,AACZ,CAAC\"}"
};

const Talks = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { data } = $$props; // data is mainly being populated from the /plugins/edlerjs-plugin-markdown/index.js
	const { html, frontmatter } = data;
	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	$$result.css.add(css);

	return `${($$result.head += `${($$result.title = `<title>${escape(frontmatter.title)}</title>`, "")}`, "")}
<a href="${"/"}" class="${"svelte-f5rkh3"}">‚Üê Home</a>

${html
	? `${html}`
	: `<h1 class="${"svelte-f5rkh3"}">Oops!! Markdown not found!</h1>`}

<div class="${"container"}" id="${"intro"}"><div class="${"content svelte-f5rkh3"}">${html}</div></div>`;
});

module.exports = Talks;
