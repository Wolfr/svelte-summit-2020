'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}
function add_attribute(name, value, boolean) {
    if (value == null || (boolean && !value))
        return '';
    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}

/* src/components/Speaker.svelte generated by Svelte v3.26.0 */

const css = {
	code: ".speaker.svelte-1sfnb0p.svelte-1sfnb0p{display:grid;grid-gap:32px;grid-template-columns:80px auto}.image.svelte-1sfnb0p img.svelte-1sfnb0p{width:80px;height:80px;-o-object-fit:cover;object-fit:cover;-webkit-clip-path:polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);clip-path:polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)}.name.svelte-1sfnb0p.svelte-1sfnb0p{color:#e4eef0;opacity:0.67}h3.svelte-1sfnb0p.svelte-1sfnb0p{font-family:\"Overpass\";margin:0 auto;line-height:140%;padding-top:5px;font-size:2em}a.svelte-1sfnb0p.svelte-1sfnb0p{text-decoration:none}.twitter.svelte-1sfnb0p.svelte-1sfnb0p{display:grid;grid-gap:5px;align-items:center;grid-template-columns:auto 1fr;color:#005daa}.twitter.svelte-1sfnb0p a.svelte-1sfnb0p{color:white;font-size:14px}.twitter.svelte-1sfnb0p img.svelte-1sfnb0p{height:16px}div.svelte-1sfnb0p p{font-size:18px;color:#bedde2;line-height:170%}",
	map: "{\"version\":3,\"file\":\"Speaker.svelte\",\"sources\":[\"Speaker.svelte\"],\"sourcesContent\":[\"<script>\\nexport let link = false;\\nexport let speaker;\\nconst { image, title, name, twitter, twitterUser } = speaker.frontmatter;\\n</script>\\n\\n<style>\\n.speaker {\\n  display: grid;\\n  grid-gap: 32px;\\n  grid-template-columns: 80px auto;\\n}\\n.image img {\\n  width: 80px;\\n  height: 80px;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\\n          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\\n}\\n.name {\\n  color: #e4eef0;\\n\\n  opacity: 0.67;\\n}\\nh3 {\\n  font-family: \\\"Overpass\\\";\\n  margin: 0 auto;\\n  line-height: 140%;\\n  padding-top: 5px;\\n  font-size: 2em;\\n}\\na {\\n  text-decoration: none;\\n}\\n.twitter {\\n  display: grid;\\n  grid-gap: 5px;\\n  align-items: center;\\n  grid-template-columns: auto 1fr;\\n  color: #005daa;\\n}\\n.twitter a {\\n  color: white;\\n  font-size: 14px;\\n}\\n.twitter img {\\n  height: 16px;\\n}\\ndiv :global(p) {\\n  font-size: 18px;\\n  color: #bedde2;\\n  line-height: 170%;\\n}</style>\\n\\n<div class=\\\"speaker\\\">\\n  <div class=\\\"image\\\">\\n    <img src=\\\"/dist/static/images/speakers/{image}\\\" alt=\\\"Speaker profile\\\" />\\n  </div>\\n  <div>\\n    <span class=\\\"name\\\">{name}</span>\\n    <h3>\\n      {#if link}<a href=\\\"/talks/{speaker.slug}\\\">{title}</a>{:else}{title}{/if}\\n    </h3>\\n    {@html speaker.html}\\n    <div class=\\\"twitter\\\">\\n      <img src=\\\"/dist/static/images/twitter.svg\\\" alt=\\\"Twitter logo\\\" />\\n      <a href={twitter}>{twitterUser}</a>\\n    </div>\\n  </div>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAOA,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,IAAI,CAAC,IAAI,AAClC,CAAC,AACD,qBAAM,CAAC,GAAG,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACpB,iBAAiB,CAAE,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CACtD,SAAS,CAAE,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,AAChE,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,KAAK,CAAE,OAAO,CAEd,OAAO,CAAE,IAAI,AACf,CAAC,AACD,EAAE,8BAAC,CAAC,AACF,WAAW,CAAE,UAAU,CACvB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,CAAC,8BAAC,CAAC,AACD,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,GAAG,CACb,WAAW,CAAE,MAAM,CACnB,qBAAqB,CAAE,IAAI,CAAC,GAAG,CAC/B,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,uBAAQ,CAAC,CAAC,eAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,uBAAQ,CAAC,GAAG,eAAC,CAAC,AACZ,MAAM,CAAE,IAAI,AACd,CAAC,AACD,kBAAG,CAAC,AAAQ,CAAC,AAAE,CAAC,AACd,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,AACnB,CAAC\"}"
};

const Speaker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { link = false } = $$props;
	let { speaker } = $$props;
	const { image, title, name, twitter, twitterUser } = speaker.frontmatter;
	if ($$props.link === void 0 && $$bindings.link && link !== void 0) $$bindings.link(link);
	if ($$props.speaker === void 0 && $$bindings.speaker && speaker !== void 0) $$bindings.speaker(speaker);
	$$result.css.add(css);

	return `<div class="${"speaker svelte-1sfnb0p"}"><div class="${"image svelte-1sfnb0p"}"><img src="${"/dist/static/images/speakers/" + escape(image)}" alt="${"Speaker profile"}" class="${"svelte-1sfnb0p"}"></div>
  <div class="${"svelte-1sfnb0p"}"><span class="${"name svelte-1sfnb0p"}">${escape(name)}</span>
    <h3 class="${"svelte-1sfnb0p"}">${link
	? `<a href="${"/talks/" + escape(speaker.slug)}" class="${"svelte-1sfnb0p"}">${escape(title)}</a>`
	: `${escape(title)}`}</h3>
    ${speaker.html}
    <div class="${"twitter svelte-1sfnb0p"}"><img src="${"/dist/static/images/twitter.svg"}" alt="${"Twitter logo"}" class="${"svelte-1sfnb0p"}">
      <a${add_attribute("href", twitter, 0)} class="${"svelte-1sfnb0p"}">${escape(twitterUser)}</a></div></div></div>`;
});

module.exports = Speaker;
