'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}

/* src/layouts/Layout.svelte generated by Svelte v3.26.0 */

const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { templateHtml } = $$props, { settings } = $$props;
	if ($$props.templateHtml === void 0 && $$bindings.templateHtml && templateHtml !== void 0) $$bindings.templateHtml(templateHtml);
	if ($$props.settings === void 0 && $$bindings.settings && settings !== void 0) $$bindings.settings(settings);

	return `${($$result.head += `<link rel="${"preload"}" href="${"/fonts/Anton-Regular.woff"}" as="${"font"}" type="${"font/woff2"}" crossorigin data-svelte="svelte-1szjnrx"><link rel="${"preload"}" href="${"/fonts/Overpass-Regular.woff2"}" as="${"font"}" type="${"font/woff2"}" crossorigin data-svelte="svelte-1szjnrx"><link rel="${"preload"}" href="${"/fonts/Overpass-Bold.woff2"}" as="${"font"}" type="${"font/woff2"}" crossorigin data-svelte="svelte-1szjnrx"><link rel="${"preload"}" href="${"/fonts/Inter-Regular.woff"}" as="${"font"}" type="${"font/woff2"}" crossorigin data-svelte="svelte-1szjnrx"><link rel="${"stylesheet"}" href="${"/style.css"}" data-svelte="svelte-1szjnrx">`, "")}
<div class="${"container"}">${templateHtml}</div>`;
});

module.exports = Layout;
