'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
function each(items, fn) {
    let str = '';
    for (let i = 0; i < items.length; i += 1) {
        str += fn(items[i], i);
    }
    return str;
}
function validate_component(component, name) {
    if (!component || !component.$$render) {
        if (name === 'svelte:component')
            name += ' this={...}';
        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
    }
    return component;
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}
function add_attribute(name, value, boolean) {
    if (value == null || (boolean && !value))
        return '';
    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}

/* src/components/Speaker.svelte generated by Svelte v3.26.0 */

const css = {
	code: ".speaker.svelte-cutk0z.svelte-cutk0z{display:grid;grid-gap:32px;--small-grid:var(--media-lte-sm) 1fr;grid-template-columns:var(--small-grid, 80px auto)}.image.svelte-cutk0z img.svelte-cutk0z{width:80px;height:80px;-o-object-fit:cover;object-fit:cover;-webkit-clip-path:polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);clip-path:polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)}.meta.svelte-cutk0z.svelte-cutk0z{display:grid;grid-gap:15px;grid-template-columns:auto 1fr;margin-bottom:8px}.name.svelte-cutk0z.svelte-cutk0z{color:#e4eef0;opacity:0.67}h3.svelte-cutk0z.svelte-cutk0z{font-family:\"Overpass\";margin:0 auto;line-height:140%;padding-top:5px;font-size:2em}a.svelte-cutk0z.svelte-cutk0z{text-decoration:none}.twitter.svelte-cutk0z.svelte-cutk0z{display:grid;grid-gap:5px;align-items:center;grid-template-columns:auto 1fr;color:#005daa}.twitter.svelte-cutk0z a.svelte-cutk0z{color:#e4eef0;opacity:0.67;font-size:14px}.twitter.svelte-cutk0z img.svelte-cutk0z{width:15px}div.svelte-cutk0z p{font-size:18px;color:#bedde2;line-height:170%}",
	map: "{\"version\":3,\"file\":\"Speaker.svelte\",\"sources\":[\"Speaker.svelte\"],\"sourcesContent\":[\"<script>\\nexport let link = false;\\nexport let speaker;\\nconst { image, title, name, twitter, twitterUser } = speaker.frontmatter;\\n</script>\\n\\n<style>\\n.speaker {\\n  display: grid;\\n  grid-gap: 32px;\\n  --small-grid: var(--media-lte-sm) 1fr;\\n  grid-template-columns: var(--small-grid, 80px auto);\\n}\\n.image img {\\n  width: 80px;\\n  height: 80px;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\\n          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\\n}\\n.meta {\\n  display: grid;\\n  grid-gap: 15px;\\n  grid-template-columns: auto 1fr;\\n  margin-bottom: 8px;\\n}\\n.name {\\n  color: #e4eef0;\\n  opacity: 0.67;\\n}\\nh3 {\\n  font-family: \\\"Overpass\\\";\\n  margin: 0 auto;\\n  line-height: 140%;\\n  padding-top: 5px;\\n  font-size: 2em;\\n}\\na {\\n  text-decoration: none;\\n}\\n.twitter {\\n  display: grid;\\n  grid-gap: 5px;\\n  align-items: center;\\n  grid-template-columns: auto 1fr;\\n  color: #005daa;\\n}\\n.twitter a {\\n  color: #e4eef0;\\n\\n  opacity: 0.67;\\n  font-size: 14px;\\n}\\n.twitter img {\\n  width: 15px;\\n}\\ndiv :global(p) {\\n  font-size: 18px;\\n  color: #bedde2;\\n  line-height: 170%;\\n}</style>\\n\\n<div class=\\\"speaker\\\">\\n  <div class=\\\"image\\\">\\n    <img src=\\\"/images/speakers/{image}\\\" alt=\\\"Speaker profile\\\" />\\n  </div>\\n  <div>\\n    <div class=\\\"meta\\\">\\n      <span class=\\\"name\\\">{name}</span>\\n      <div class=\\\"twitter\\\">\\n        <img src=\\\"/images/twitter.svg\\\" alt=\\\"Twitter logo\\\" />\\n        <a href={twitter}>{twitterUser}</a>\\n      </div>\\n    </div>\\n    <h3>\\n      {#if link}<a href=\\\"/talks/{speaker.slug}\\\">{title}</a>{:else}{title}{/if}\\n    </h3>\\n    {@html speaker.html}\\n  </div>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAOA,QAAQ,4BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,YAAY,CAAE,uBAAuB,CACrC,qBAAqB,CAAE,IAAI,YAAY,CAAC,UAAU,CAAC,AACrD,CAAC,AACD,oBAAM,CAAC,GAAG,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACpB,iBAAiB,CAAE,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CACtD,SAAS,CAAE,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,AAChE,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,IAAI,CAAC,GAAG,CAC/B,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,AACf,CAAC,AACD,EAAE,4BAAC,CAAC,AACF,WAAW,CAAE,UAAU,CACvB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,CAAC,4BAAC,CAAC,AACD,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,QAAQ,4BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,GAAG,CACb,WAAW,CAAE,MAAM,CACnB,qBAAqB,CAAE,IAAI,CAAC,GAAG,CAC/B,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,sBAAQ,CAAC,CAAC,cAAC,CAAC,AACV,KAAK,CAAE,OAAO,CAEd,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,sBAAQ,CAAC,GAAG,cAAC,CAAC,AACZ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,iBAAG,CAAC,AAAQ,CAAC,AAAE,CAAC,AACd,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,AACnB,CAAC\"}"
};

const Speaker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { link = false } = $$props;
	let { speaker } = $$props;
	const { image, title, name, twitter, twitterUser } = speaker.frontmatter;
	if ($$props.link === void 0 && $$bindings.link && link !== void 0) $$bindings.link(link);
	if ($$props.speaker === void 0 && $$bindings.speaker && speaker !== void 0) $$bindings.speaker(speaker);
	$$result.css.add(css);

	return `<div class="${"speaker svelte-cutk0z"}"><div class="${"image svelte-cutk0z"}"><img src="${"/images/speakers/" + escape(image)}" alt="${"Speaker profile"}" class="${"svelte-cutk0z"}"></div>
  <div class="${"svelte-cutk0z"}"><div class="${"meta svelte-cutk0z"}"><span class="${"name svelte-cutk0z"}">${escape(name)}</span>
      <div class="${"twitter svelte-cutk0z"}"><img src="${"/images/twitter.svg"}" alt="${"Twitter logo"}" class="${"svelte-cutk0z"}">
        <a${add_attribute("href", twitter, 0)} class="${"svelte-cutk0z"}">${escape(twitterUser)}</a></div></div>
    <h3 class="${"svelte-cutk0z"}">${link
	? `<a href="${"/talks/" + escape(speaker.slug)}" class="${"svelte-cutk0z"}">${escape(title)}</a>`
	: `${escape(title)}`}</h3>
    ${speaker.html}</div></div>`;
});

/* src/components/Sections/Speakers.svelte generated by Svelte v3.26.0 */

const css$1 = {
	code: ".shaded.svelte-1hwapxl{--small-padding:var(--media-lte-sm) 0 25px 120px 25px;padding:var(--small-padding, 0 40px 170px 40px);background-image:url(/images/forest.svg);background-position:bottom left;background-repeat:repeat-x}h2.svelte-1hwapxl{--small-font:var(--media-lte-sm) 34px;font-size:var(--small-font, 60px);font-family:\"Anton\";line-height:150%;text-align:center}section.svelte-1hwapxl{display:grid;justify-content:initial;margin:0 auto;--small-padding:var(--media-lte-sm) 50px 0;padding:var(--small-padding, initial 0);max-width:var(--container-width)}.grid.svelte-1hwapxl{display:grid;grid-gap:50px;--small-grid:var(--media-lte-sm) 300px 1fr;grid-template-columns:repeat(\n    auto-fill,\n    minmax(var(--small-grid, 400px, 1fr))\n  )}",
	map: "{\"version\":3,\"file\":\"Speakers.svelte\",\"sources\":[\"Speakers.svelte\"],\"sourcesContent\":[\"<script>\\nexport let talks;\\nimport Speaker from \\\"../Speaker.svelte\\\";\\n</script>\\n\\n<style>\\n.shaded {\\n  --small-padding: var(--media-lte-sm) 0 25px 120px 25px;\\n  padding: var(--small-padding, 0 40px 170px 40px);\\n  background-image: url(/images/forest.svg);\\n  background-position: bottom left;\\n  background-repeat: repeat-x;\\n}\\nh2 {\\n  --small-font: var(--media-lte-sm) 34px;\\n  font-size: var(--small-font, 60px);\\n  font-family: \\\"Anton\\\";\\n  line-height: 150%;\\n  text-align: center;\\n}\\nsection {\\n  display: grid;\\n  justify-content: initial;\\n  margin: 0 auto;\\n\\n  --small-padding: var(--media-lte-sm) 50px 0;\\n  padding: var(--small-padding, initial 0);\\n  max-width: var(--container-width);\\n}\\n.grid {\\n  display: grid;\\n  grid-gap: 50px;\\n  --small-grid: var(--media-lte-sm) 300px 1fr;\\n  grid-template-columns: repeat(\\n    auto-fill,\\n    minmax(var(--small-grid, 400px, 1fr))\\n  );\\n}\\n/* @media screen and (max-width: 600px) {\\n  .grid {\\n    grid-template-columns: 1fr;\\n  }\\n} */</style>\\n\\n<div class=\\\"shaded\\\">\\n  <section id=\\\"speakers\\\">\\n    <h2>SPEAKERS</h2>\\n    <div class=\\\"grid\\\">\\n      {#each talks as speaker}\\n        <Speaker {speaker} />\\n      {/each}\\n    </div>\\n  </section>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAMA,OAAO,eAAC,CAAC,AACP,eAAe,CAAE,qCAAqC,CACtD,OAAO,CAAE,IAAI,eAAe,CAAC,kBAAkB,CAAC,CAChD,gBAAgB,CAAE,IAAI,kBAAkB,CAAC,CACzC,mBAAmB,CAAE,MAAM,CAAC,IAAI,CAChC,iBAAiB,CAAE,QAAQ,AAC7B,CAAC,AACD,EAAE,eAAC,CAAC,AACF,YAAY,CAAE,wBAAwB,CACtC,SAAS,CAAE,IAAI,YAAY,CAAC,KAAK,CAAC,CAClC,WAAW,CAAE,OAAO,CACpB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,OAAO,CACxB,MAAM,CAAE,CAAC,CAAC,IAAI,CAEd,eAAe,CAAE,0BAA0B,CAC3C,OAAO,CAAE,IAAI,eAAe,CAAC,UAAU,CAAC,CACxC,SAAS,CAAE,IAAI,iBAAiB,CAAC,AACnC,CAAC,AACD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,YAAY,CAAE,6BAA6B,CAC3C,qBAAqB,CAAE;IACrB,SAAS,CAAC;IACV,OAAO,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;GACtC,AACH,CAAC\"}"
};

const Speakers = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { talks } = $$props;
	if ($$props.talks === void 0 && $$bindings.talks && talks !== void 0) $$bindings.talks(talks);
	$$result.css.add(css$1);

	return `<div class="${"shaded svelte-1hwapxl"}"><section id="${"speakers"}" class="${"svelte-1hwapxl"}"><h2 class="${"svelte-1hwapxl"}">SPEAKERS</h2>
    <div class="${"grid svelte-1hwapxl"}">${each(talks, speaker => `${validate_component(Speaker, "Speaker").$$render($$result, { speaker }, {}, {})}`)}</div></section></div>`;
});

module.exports = Speakers;
